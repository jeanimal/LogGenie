services:
  app:
    build: .
    ports:
      - "3000:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/loggenie
      - SESSION_SECRET=change-this-to-a-secure-random-key
      - MOCK_AUTH=true
      - REPLIT_DOMAINS=localhost:3000
      - ISSUER_URL=https://replit.com/oidc
      - REPL_ID=your-repl-id
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=loggenie
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-migration.sql:/docker-entrypoint-initdb.d/docker-migration.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: